name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: none
    
    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Run database migrations
      run: php artisan migrate --force
    
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    
    - name: Compile assets
      run: |
        npm ci
        npm run build
    
    - name: Setup Supervisor for Reverb
      run: |
        sudo bash -c 'cat > /etc/supervisor/conf.d/reverb.conf <<EOL
        [program:reverb]
        command=/usr/bin/php ${{ github.workspace }}/artisan reverb:start
        directory=${{ github.workspace }}
        autostart=true
        autorestart=true
        stderr_logfile=/var/log/reverb.err.log
        stdout_logfile=/var/log/reverb.out.log
        user=www-data
        EOL'
        
        sudo supervisorctl reread
        sudo supervisorctl update
        sudo supervisorctl start reverb
    
    - name: Configure Nginx for WebSockets
      run: |
        sudo bash -c 'cat > /etc/nginx/sites-available/reverb-proxy <<EOL
        location /ws {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host \$host;
        }
        EOL'
        
        sudo nginx -t
        sudo systemctl restart nginx

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ github.repository }}:preview .

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image
      run: docker push ghcr.io/${{ github.repository }}:preview

    
    - name: Deploy to production
      uses: deployphp/action@v1
      with:
        private-key: ${{ secrets.DEPLOY_KEY }}
        dep: deploy production